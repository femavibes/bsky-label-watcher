{
	// Place your cadence workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Gen Function $": {
		"prefix": "gg",
		"body": [
			"function* () {\n\t$0\n}"
		],
		"description": "Generator function"
	},
	"Gen Function $ (wrapped)": {
		"prefix": "egg",
		"body": [
			"Effect.gen(function* () {\n\t$0\n})"
		],
		"description": "Generator function"
	},
	"Gen Yield $": {
		"prefix": "yy",
		"body": [
			"yield* $0"
		],
		"description": "Yield generator"
	},
	"Gen Yield $ (const)": {
		"prefix": "cyy",
		"body": [
			"const $1 = yield* $0"
		],
		"description": "Yield generator constant"
	},
	"Tagged Class $": {
		"prefix": "etc",
		"body": [
			"export class $1 extends Context.Tag(\"$1\")<$1,I$1> (){",
			"}"
		]
	},
	"Tagged Error $": {
		"prefix": "ete",
		"body": [
			"export class $1 extends Data.TaggedError(\"$1\")<{",
			"\tmessage: string",
			"\tcause?: unknown",
			"}> {}"
		]
	},
	"Effect Service $": {
		"prefix": "effs",
		"body": [
			"export class $1 extends Effect.Service<$1>()(\"$1\", {",
			"\teffect: Effect.gen(function* () {",
			"\t\t$0",
			"\t}),",
			"}) {}"
		]
	},
}